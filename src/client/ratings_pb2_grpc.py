# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ratings_pb2 as ratings__pb2


class RatingsStub(object):
  """Ratings service enables users to rate correlated events.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RecordBinaryEvents = channel.stream_unary(
        '/ratings.Ratings/RecordBinaryEvents',
        request_serializer=ratings__pb2.BinaryEvent.SerializeToString,
        response_deserializer=ratings__pb2.BinaryEventsSummary.FromString,
        )
    self.ListBinaryEvents = channel.stream_stream(
        '/ratings.Ratings/ListBinaryEvents',
        request_serializer=ratings__pb2.BinaryEventSource.SerializeToString,
        response_deserializer=ratings__pb2.BinaryEvent.FromString,
        )
    self.VoteBinaryEvent = channel.unary_unary(
        '/ratings.Ratings/VoteBinaryEvent',
        request_serializer=ratings__pb2.BinaryVote.SerializeToString,
        response_deserializer=ratings__pb2.BinaryVoteSummary.FromString,
        )


class RatingsServicer(object):
  """Ratings service enables users to rate correlated events.
  """

  def RecordBinaryEvents(self, request_iterator, context):
    """RecordBinaryEvents records a stream of BinaryEvent messages and 
    returns a summary of total recorded events.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListBinaryEvents(self, request_iterator, context):
    """ListBinaryEvents accepts a stream of BinaryEventSource messages and
    responds with a stream of BinaryEvent messages.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VoteBinaryEvent(self, request, context):
    """VoteBinaryEvent accepts a BinaryVote and returns a BinaryVoteSummary.

    It enables a user to vote on a binary event.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RatingsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RecordBinaryEvents': grpc.stream_unary_rpc_method_handler(
          servicer.RecordBinaryEvents,
          request_deserializer=ratings__pb2.BinaryEvent.FromString,
          response_serializer=ratings__pb2.BinaryEventsSummary.SerializeToString,
      ),
      'ListBinaryEvents': grpc.stream_stream_rpc_method_handler(
          servicer.ListBinaryEvents,
          request_deserializer=ratings__pb2.BinaryEventSource.FromString,
          response_serializer=ratings__pb2.BinaryEvent.SerializeToString,
      ),
      'VoteBinaryEvent': grpc.unary_unary_rpc_method_handler(
          servicer.VoteBinaryEvent,
          request_deserializer=ratings__pb2.BinaryVote.FromString,
          response_serializer=ratings__pb2.BinaryVoteSummary.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ratings.Ratings', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
